# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - dev

pool:
  vmImage: "ubuntu-latest"

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  dotnet_version: "8.x"

steps:
  - task: UseDotNet@2
    inputs:
      version: "8.x"

  - task: DotNetCoreCLI@2
    displayName: "dotnet build"
    inputs:
      command: "build"
      configuration: $(buildConfiguration)

  - task: DotNetCoreCLI@2
    displayName: "dotnet test"
    inputs:
      command: "test"
      arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
      publishTestResults: true
      projects: "webtest" # update with your test project directory

  - task: PublishCodeCoverageResults@2
    displayName: "Publish code coverage report"
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"


    # - task: WhiteSource@21
    #   inputs:
    #     cwd: '$(System.DefaultWorkingDirectory)'

    # - task: DotNetCoreCLI@2
    #   displayName: "Publish application"
    #   inputs:
    #     command: "publish"
    #     projects: "**/asp-webapp.csproj"
    #     arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
    #     publishWebProjects: false

    # - task: PublishBuildArtifacts@1
    #   displayName: "Publish artifacts"
    #   inputs:
    #     PathtoPublish: "$(Build.ArtifactStagingDirectory)"
    #     ArtifactName: "webapp"
    #     publishLocation: "Container"
# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
